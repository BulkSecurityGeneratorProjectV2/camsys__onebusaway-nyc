<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2011 Metropolitan Transportation Authority

    Licensed under the Apache License, Version 2.0 (the "License"); you may not
    use this file except in compliance with the License. You may obtain a copy of
    the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations under
    the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd 
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
<<<<<<< HEAD


    <!-- Transit Data Service -->
    
	<!-- Transit data federation webapp as TDS: production/staging config -->
<!--     <bean id="transitDataService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean"> -->
<!--         <property name="serviceUrl" value="http://localhost:8080/onebusaway-nyc-transit-data-federation-webapp/remoting/transit-data-service" /> -->
<!--         <property name="serviceInterface" value="org.onebusaway.transit_data.services.TransitDataService" /> -->
<!--     </bean> -->

<!--     <bean id="vehicleTrackingManagementService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean"> -->
<!--         <property name="serviceUrl" value="http://localhost:8080/onebusaway-nyc-transit-data-federation-webapp/remoting/vehicle-tracking-management-service" /> -->
<!--         <property name="serviceInterface" value="org.onebusaway.nyc.transit_data.services.VehicleTrackingManagementService" /> -->
<!--     </bean> -->

<!--     <bean id="configService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean"> -->
<!--         <property name="serviceUrl" value="http://localhost:8080/onebusaway-nyc-transit-data-federation-webapp/remoting/configuration-service"/> -->
<!--         <property name="serviceInterface" value="org.onebusaway.nyc.transit_data.services.ConfigurationService" /> -->
<!--     </bean> -->

	<!-- Vehicle tracking webapp as TDS: development config -->
    <bean id="transitDataService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceUrl" value="http://localhost:8080/onebusaway-nyc-vehicle-tracking-webapp/remoting/transit-data-service" />
        <property name="serviceInterface" value="org.onebusaway.transit_data.services.TransitDataService" />
    </bean>
    
    <bean id="vehicleTrackingManagementService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceUrl" value="http://localhost:8080/onebusaway-nyc-vehicle-tracking-webapp/remoting/vehicle-tracking-management-service" />
=======
<!-- id was serviceRegistry -->
    <bean id="transitDataService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceUrl" value="http://${service.tds.host}/${service.tds.path}/remoting/transit-data-service" />
<!--         <property name="serviceUrl" value="http://${service.tds.host}/onebusaway-nyc-vehicle-tracking-webapp/remoting/transit-data-service" /> -->
        <property name="serviceInterface" value="org.onebusaway.transit_data.services.TransitDataService" />
    </bean>

<!-- id was configServiceRegistry -->
    <bean id="configService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceUrl" value="http://${service.vehicle-tracking.host}/${service.tds.path}/remoting/${service.vehicle-tracking.service-name}"/>
<!--         <property name="serviceUrl" value="http://${service.vehicle-tracking.host}/onebusaway-nyc-vehicle-tracking-webapp/remoting/vehicle-tracking-management"/> -->
>>>>>>> Parameterize what's needed in nyc-webapp's pom.xml via profiles.
        <property name="serviceInterface" value="org.onebusaway.nyc.transit_data.services.VehicleTrackingManagementService" />
    </bean>
    
    <bean id="configService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceUrl" value="http://localhost:8080/onebusaway-nyc-vehicle-tracking-webapp/remoting/configuration-service"/>
        <property name="serviceInterface" value="org.onebusaway.nyc.transit_data.services.ConfigurationService" />
    </bean>
    


    <!-- Database Configuration -->
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost/org_onebusaway_nyc" />
        <property name="username" value="postgres" />
        <property name="password" value="changeme" />
    </bean>
    
    <bean id="webappHibernateProperties" class="org.onebusaway.container.spring.PropertiesBeanPostProcessor">
        <property name="target" value="hibernateProperties" />
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
            </props> 
        </property> 
    </bean> 

    <alias name="dataSource" alias="mutableDataSource" />
  


	<!-- Other Stuff: -->

	<bean id="externalGeocoderImpl" class="org.onebusaway.geocoder.impl.GoogleGeocoderImpl" />
    
    <bean id="serviceAreaServiceImpl" class="org.onebusaway.presentation.impl.ServiceAreaServiceImpl">
        <property name="defaultBounds">
            <bean class="org.onebusaway.geospatial.model.CoordinateBounds">
                <property name="minLat" value="40.57963926492829" />
                <property name="minLon" value="-74.19498680838014" />
                <property name="maxLat" value="40.94577345952476" />
                <property name="maxLon" value="-73.69785546072389" />
            </bean>
        </property>
		<property name="calculateDefaultBoundsFromAgencyCoverage" value="false"/>        
    </bean>
        
    <bean class="org.onebusaway.container.spring.PropertyOverrideConfigurer">
        <property name="properties">
            <props>
                <prop key="cacheManager.cacheManagerName">org.onebusaway.nyc_webapp.cacheManager</prop>
            </props>
        </property>
    </bean>
    
    <bean id="wikiDocumentService" class="org.onebusaway.wiki.xwiki.impl.XWikiDocumentServiceImpl">
        <property name="xwikiUrl" value="http://bustime.mta.info/xwiki" />
    </bean>

    <bean id="wikiRenderingService" class="org.onebusaway.wiki.xwiki.impl.XWikiRenderingServiceImpl">
        <property name="wikiDocumentViewUrl" value="/wiki/%{documentName}" />
        <property name="wikiDocumentEditUrl" value="http://bustime.mta.info/xwiki/bin/edit/%{namespace}/%{documentName}" />
        <property name="wikiAttachmentUrl" value="http://bustime.mta.info/xwiki/bin/download/%{namespace}/%{documentName}/%{attachmentName}" />
    </bean>

<<<<<<< HEAD
=======
     <bean id="nycConfigurationServiceImpl" class="org.onebusaway.nyc.presentation.impl.NycConfigurationServiceImpl">
     <property name="path">
       <bean class="java.io.File">
         <constructor-arg value="/tmp/configuration-service.properties" />
       </bean>
     </property>
     <property name="configuration">
        <bean class="org.onebusaway.nyc.presentation.service.ConfigurationBean">
            <property name="apiUrl" value="http://${service.tds.host}"/>
            <property name="urlPrefix" value="${urlPrefix}"/>
        </bean>
     </property>
   </bean>
>>>>>>> Parameterize what's needed in nyc-webapp's pom.xml via profiles.
</beans>
