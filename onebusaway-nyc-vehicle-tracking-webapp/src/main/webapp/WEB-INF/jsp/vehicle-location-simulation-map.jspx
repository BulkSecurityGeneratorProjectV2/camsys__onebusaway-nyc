<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2011 Metropolitan Transportation Authority

    Licensed under the Apache License, Version 2.0 (the "License"); you may not
    use this file except in compliance with the License. You may obtain a copy of
    the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations under
    the License.

-->
<html xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:form="http://www.springframework.org/tags/form">
<jsp:directive.page contentType="text/html" />
<head>
<title>Vehicle Location Simulations - Block</title>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"><!-- //prevent jspx minimization --></script>
<script type="text/javascript" src="http://openlayers.org/api/OpenLayers.js"><!-- //prevent jspx minimization --></script>

<script type="text/javascript">
var OBA = window.OBA || {};

OBA.Debug = function() {
	var map = null;
	var markers = null;
	var routes = null;
	var popup = null;
	var feature = null;
	
	var tripsByBlockId = null;
	
	function decodePolyline(encoded) {
		var len = encoded.length;
		var index = 0;
		var array = [];
		var lat = 0;
		var lng = 0;

		while(index &lt; len) {
			var b;
			var shift = 0;
			var result = 0;
			do {
				b = encoded.charCodeAt(index++) - 63;
				result |= (b &amp; 0x1f) &lt;&lt; shift;
				shift += 5;
			} while (b &gt;= 0x20);
			var dlat = ((result &amp; 1) ? ~(result &gt;&gt; 1) : (result &gt;&gt; 1));
			lat += dlat;

			shift = 0;
			result = 0;
			do {
				b = encoded.charCodeAt(index++) - 63;
				result |= (b &amp; 0x1f) &lt;&lt; shift;
				shift += 5;
			} while (b &gt;= 0x20);
			var dlng = ((result &amp; 1) ? ~(result &gt;&gt; 1) : (result &gt;&gt; 1));
			lng += dlng;

			array.push([lat * 1e-5, lng * 1e-5]);
		}

		return array;
	}
	
	function getParameterByName(name, defaultValue) {
		name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
		var regexS = "[\\?&amp;]"+name+"=([^&amp;#]*)";
		var regex = new RegExp(regexS);
		var results = regex.exec(window.location.href);
		if(results == null) {
			return defaultValue;
		} else {
			return decodeURIComponent(results[1].replace(/\+/g, " "));
		}
	}
	
	function showRecordsOnMap(min_time, max_time) {
		if(markers !== null)
			markers.clearMarkers();
		
		jQuery.ajax({
			url: "vehicle-location-simulation!task-result-records-json.do?taskId=" + getParameterByName("taskId"),
			success: function(data) {
				if(data.records === null) {
					alert("No records were found for this task.");
					return;
				}

				var i = 0;
				jQuery.each(data.records, function(recordIndex, record) {
					// filter out
					if(min_time !== null &amp;&amp; max_time !== null &amp;&amp; min_time !== "" &amp;&amp; max_time !== "") {
						if(record.timestamp &lt; min_time || record.timestamp &gt; max_time) {
							return
						}
					}
					
		            var size = new OpenLayers.Size(11,15);
		            var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
		            var icon = new OpenLayers.Icon('http://www.openlayers.org/dev/img/marker.png',size,offset);
		            
		            var proj = new OpenLayers.Projection("EPSG:4326");
		            var point = new OpenLayers.LonLat(record.lon, record.lat);
		            point.transform(proj, map.getProjectionObject());
		            
		            var marker = new OpenLayers.Marker(point, icon);
		            markers.addMarker(marker);
		            
		            marker.events.register("mousedown", marker, function(event) {
			            feature = new OpenLayers.Feature(markers, point);	
						feature.data.popupSize = new OpenLayers.Size(600, 500);
			            popup = feature.createPopup(true);
		                
			            var markerText = {
			            	inferredTripId: "NA",
			            	timestampAsDate: "NA",
			            	other: "",
			            	toString: function () {
			            		return "inferredTripId:" + this.inferredTripId + "<br/>"
			            		 + "timestampAsDate:" + this.timestampAsDate + "<br/>"
			            		 + this.other;
			            	}
			            }
		                var html = "";
						jQuery.each(record, function(property, value) {
							if (value !== null) {
								
								if(property === "inferredTripId") {
									markerText.inferredTripId = "&lt;a href='#'&gt;" + value + "&lt;/a&gt;";
// 									html += property + ": &lt;a href='#'&gt;" + value + "&lt;/a&gt;&lt;br/&gt;";
								} else if(property === "timestampAsDate") {
									formattedTime = new Date(value);
									markerText.timestampAsDate = formattedTime;
// 									html += property + ": " + formattedTime + "<br/>";
								} else if (property === "vehicleId"){
									markerText.other += property + ": " + value.agencyId + "_" 
									 + value.id + "<br/>";
								} else {
									markerText.other += property + ": " + value + "<br/>";
// 									html += property + ": " + value + "<br/>";
								} 
							}
						});
// 		                popup.setContentHTML(html);
		                popup.setContentHTML(markerText.toString());
		                markers.map.addPopup(popup);
		                
		                var tripLink = jQuery(popup.contentDiv).find("a");
		                tripLink.click(function(e) {
		                	e.preventDefault();

		                	selectTrip(jQuery(this).text());
		                });

		                OpenLayers.Event.stop(event);
		            });
		            
		            i++;
				});

				if(i > 0) {
		            map.zoomToExtent(markers.getDataExtent());
				}
			}
		});
	}
	
	function selectTrip(selectedTripId) {
		if(typeof selectedTripId === 'undefined') {
			var selectedTrip = jQuery("#trips option:selected");
			selectedTripId = selectedTrip.val();
		}
		
		jQuery.ajax({
			url: "vehicle-location-simulation!points-for-trip-id.do?tripId=" + selectedTripId,
			success: function(data) {
	            var rawPoints = decodePolyline(data.points);

	            var points = [];
	            for(var i = 0; i &lt; rawPoints.length; i++) {
	                var wgsPoint = new OpenLayers.Geometry.Point(rawPoints[i][1], rawPoints[i][0]);
	                var proj = new OpenLayers.Projection("EPSG:4326");
	                var point = wgsPoint.transform(proj, map.getProjectionObject());
	                points.push(point);
	            }

	            if(points.length === 0) {
	                return;
	            }

	            var style = {
	                strokeColor: "#00FF00",
	                strokeOpacity: 0.80,
	                strokeWidth: 5
	            };

	            var polyline = new OpenLayers.Geometry.LineString(points);
	            var lineFeature = new OpenLayers.Feature.Vector(polyline, null, style);
	            routes.addFeatures([lineFeature]);
	            
	            map.zoomToExtent(routes.getDataExtent());
			}
		});		
	}
	
	function initTripList() {
		var selectedBlock = jQuery("#blocks option:selected");
		var tripList = jQuery("#trips");
		tripList.empty();

		var selectedBlockId = selectedBlock.val();
		
		jQuery.each(tripsByBlockId[selectedBlockId], function(_, tripId) {
			var option = jQuery("<option>" + tripId + "</option>");
			option.attr("value", tripId);
			tripList.append(option);
		})

		tripList.change(selectTrip);				
	}
	
	function initBlockList() {
		var selectedRoute = jQuery("#routes option:selected");
		var selectedRouteId = selectedRoute.val();
		
		var tripList = jQuery("#trips");
		tripList.empty();

		jQuery.ajax({
			url: "vehicle-location-simulation!active-blocks-for-route-json.do?routeId=" + selectedRouteId,
			success: function(data) {
				tripsByBlockId = data.blocks;

				var blockList = jQuery("#blocks");
				blockList.empty();

				jQuery.each(data.blocks, function(blockId, trips) {
					var option = jQuery("<option>" + blockId + "</option>");
					option.attr("value", blockId);
					blockList.append(option);
				})

				blockList.change(initTripList);				
			}
		});
	}
	
	function initRouteList() {
		jQuery.ajax({
			url: "vehicle-location-simulation!active-routes-json.do",
			success: function(data) {
				var routeList = jQuery("#routes");
				routeList.empty();

				jQuery.each(data.routes, function(_, routeId) {
					var option = jQuery("<option>" + routeId + "</option>");
					option.attr("value", routeId);
					routeList.append(option);
				})

				routeList.change(initBlockList);				
			}
		});
	}
	
	return {
		initialize: function() {
			showRecordsOnMap(null, null);
			initRouteList();
			
			var apiKey = "AqTGBsziZHIJYYxgivLBf0hVdrAk9mWO5cQcb8Yux8sW5M8c8opEC2lZqKR1ZZXf";

			map = new OpenLayers.Map('map');
            markers = new OpenLayers.Layer.Markers("Markers");
            routes = new OpenLayers.Layer.Vector("Routes");
            
            var road = new OpenLayers.Layer.Bing({
			    key: apiKey,
			    type: "Road",
			    metadataParams: {mapVersion: "v1"}
			});

			map.addLayers([road, routes, markers]);
			map.addControl(new OpenLayers.Control.LayerSwitcher());
			
			map.setCenter(new OpenLayers.LonLat(-74.081154, 40.639228).transform(
			    new OpenLayers.Projection("EPSG:900913"),
			    map.getProjectionObject()
			), 11);

			jQuery("#filter_apply").click(function(e) {
				e.preventDefault();
				
				var min = jQuery("#filter_start").val();
				var max = jQuery("#filter_end").val();
				showRecordsOnMap(min, max);
			});
		}
	};    
};

jQuery(document).ready(function() { new OBA.Debug().initialize(); });
</script>
</head>
<body style="position: relative;">

<p>
<a href="vehicle-location-simulation.do">Back to Vehicle Location Simulation Console</a>
</p>

<table>
<tr>
<td style="width: 410px;">
	All Routes:
	<br/>
	<select size="10" style="width: 400px;" id="routes">
		<option value="">Loading...</option>
	</select>

	Active Blocks For Selected Route:
	<br/>
	<select size="10" style="width: 400px;" id="blocks">
		<option value="">Select a route first.</option>
	</select>

	Trips In Selected Block:
	<br/>
	<select size="10" style="width: 400px;" id="trips">
		<option value="">Select a block first.</option>
	</select>
	
	Show Records Between:
	<br/>
	<input type="text" id="filter_start" size="10"/> (epoch) and <input type="text" id="filter_end" size="10"/> (epoch)
	<br/>
	<input type="submit" value="Refresh" id="filter_apply"/>
</td>
<td>
	<div id="map" style="width: 1000px; height: 700px;"></div>
</td>
</tr>
</table>

</body>
</html>